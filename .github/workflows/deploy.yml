name: Deploy Jekyll site to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install Pandoc and pandoc-sidenote
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc
          # Build pandoc-sidenote from source using Stack (already installed on runner)
          git clone https://github.com/jez/pandoc-sidenote.git /tmp/pandoc-sidenote
          cd /tmp/pandoc-sidenote
          stack build
          stack install --local-bin-path /usr/local/bin

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        run: |
          bundle exec jekyll build --baseurl "/blog"
        env:
          JEKYLL_ENV: production

      - name: Copy all assets to blog directory
        run: |
          # Create the blog/assets directory if it doesn't exist
          mkdir -p _site/blog/assets
          
          # Copy all assets recursively while preserving directory structure
          cp -r _site/assets/* _site/blog/assets/
          
          # Verify the copy operation for key asset types
          echo "Verifying asset directories:"
          
          # Check CSS
          echo "CSS files:"
          ls -la _site/assets/css/ || echo "No CSS directory found"
          ls -la _site/blog/assets/css/ || echo "No CSS directory in target"
          
          # Check JS
          echo "JavaScript files:"
          ls -la _site/assets/js/ || echo "No JS directory found"
          ls -la _site/blog/assets/js/ || echo "No JS directory in target"
          
          # Check fonts
          echo "Font files:"
          ls -la _site/assets/fonts/ || echo "No fonts directory found"
          ls -la _site/blog/assets/fonts/ || echo "No fonts directory in target"
          
          # Check images
          echo "Image files:"
          ls -la _site/assets/images/ || echo "No images directory found"
          ls -la _site/blog/assets/images/ || echo "No images directory in target"

      - name: Print output directory structure
        run: |
          echo "Generated _site directory structure:"
          find _site -type f | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
